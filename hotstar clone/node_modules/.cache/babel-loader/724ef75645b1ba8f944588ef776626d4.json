{"ast":null,"code":"var _jsxFileName = \"/Users/hyauto/Desktop/hotstarclone/hotstar clone/src/VerifierChallenger.js\";\n// import hmacSHA512 from \"crypto-js/hmac-sha512\";\nimport sha256 from \"crypto-js/sha256\";\nimport Base64 from \"crypto-js/enc-base64\"; // Dependency: Node.js crypto module\n// https://nodejs.org/api/crypto.html#crypto_crypto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerifierChallenger = () => {\n  //   function base64URLEncode(str) {\n  //     return str\n  //       .toString(\"base64\")\n  //       .replace(/\\+/g, \"-\")\n  //       .replace(/\\//g, \"_\")\n  //       .replace(/=/g, \"\");\n  //   }\n  //   var code_verifier = base64URLEncode(crypto.randomBytes(32));\n  // var randomBytes=require('randomBytes')  \n  console.log(\"random\");\n  console.log(crypto.randomBytes(32));\n  var code_verifier = Base64.stringify(crypto.randomBytes(32)); //   function sha256(buffer) {\n  //     return crypto.createHash(\"sha256\").update(buffer).digest();\n  //   }\n  //   var code_challenger = base64URLEncode(sha256(code_verifier));\n\n  var code_challenger = Base64.stringify(sha256(code_verifier));\n  console.log(code_verifier);\n  console.log(code_challenger);\n\n  /*#__PURE__*/\n  _jsxDEV(\"a\", {\n    href: `https://dev-12u2388w.us.auth0.com/authorize?\n  response_type=code&\n  code_challenge=${code_challenger}&\n  code_challenge_method=S256&\n  client_id=UeOlj5xtXsESZ2PGctxyOPoz22ybghi3&\n  redirect_uri=http://localhost:3000/welcome&\n  scope=openid%20profile&\n  state=rahul12384`,\n    children: \"Sign In\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_c = VerifierChallenger;\nexport default VerifierChallenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifierChallenger\");","map":{"version":3,"sources":["/Users/hyauto/Desktop/hotstarclone/hotstar clone/src/VerifierChallenger.js"],"names":["sha256","Base64","VerifierChallenger","console","log","crypto","randomBytes","code_verifier","stringify","code_challenger"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAGA;AACA;;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,WAAP,CAAmB,EAAnB,CAAZ;AACF,MAAIC,aAAa,GAAGN,MAAM,CAACO,SAAP,CAAiBH,MAAM,CAACC,WAAP,CAAmB,EAAnB,CAAjB,CAApB,CAZ+B,CAcjC;AACA;AACA;AACA;;AACE,MAAIG,eAAe,GAAGR,MAAM,CAACO,SAAP,CAAiBR,MAAM,CAACO,aAAD,CAAvB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYK,eAAZ;;AACA;AAAA;AAAG,IAAA,IAAI,EAAG;AACZ;AACA,mBAAmBA,eAAgB;AACnC;AACA;AACA;AACA;AACA,mBAPE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWD,CAhCD;;KAAMP,kB;AAiCN,eAAeA,kBAAf","sourcesContent":["// import hmacSHA512 from \"crypto-js/hmac-sha512\";\nimport sha256 from \"crypto-js/sha256\";\nimport Base64 from \"crypto-js/enc-base64\";\n\n\n// Dependency: Node.js crypto module\n// https://nodejs.org/api/crypto.html#crypto_crypto\nconst VerifierChallenger = () => {\n//   function base64URLEncode(str) {\n//     return str\n//       .toString(\"base64\")\n//       .replace(/\\+/g, \"-\")\n//       .replace(/\\//g, \"_\")\n//       .replace(/=/g, \"\");\n//   }\n//   var code_verifier = base64URLEncode(crypto.randomBytes(32));\n  // var randomBytes=require('randomBytes')  \n    console.log(\"random\")\n    console.log(crypto.randomBytes(32))\n  var code_verifier = Base64.stringify(crypto.randomBytes(32));\n\n//   function sha256(buffer) {\n//     return crypto.createHash(\"sha256\").update(buffer).digest();\n//   }\n//   var code_challenger = base64URLEncode(sha256(code_verifier));\n  var code_challenger = Base64.stringify(sha256(code_verifier));\n  console.log(code_verifier);\n  console.log(code_challenger);\n  <a href={`https://dev-12u2388w.us.auth0.com/authorize?\n  response_type=code&\n  code_challenge=${code_challenger}&\n  code_challenge_method=S256&\n  client_id=UeOlj5xtXsESZ2PGctxyOPoz22ybghi3&\n  redirect_uri=http://localhost:3000/welcome&\n  scope=openid%20profile&\n  state=rahul12384`}>\n  Sign In\n</a>\n\n};\nexport default VerifierChallenger;\n"]},"metadata":{},"sourceType":"module"}