{"ast":null,"code":"var _jsxFileName = \"/Users/hyauto/Desktop/hotstarclone/hotstar clone/src/VerifierChallenger.js\";\n// import hmacSHA512 from \"crypto-js/hmac-sha512\";\nimport sha256 from \"crypto-js/sha256\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport CryptoJS from \"crypto-js\"; // Dependency: Node.js crypto module\n// https://nodejs.org/api/crypto.html#crypto_crypto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerifierChallenger = () => {\n  //   function base64URLEncode(str) {\n  //     return str\n  //       .toString(\"base64\")\n  //       .replace(/\\+/g, \"-\")\n  //       .replace(/\\//g, \"_\")\n  //       .replace(/=/g, \"\");\n  //   }\n  //   var code_verifier = base64URLEncode(crypto.randomBytes(32));\n  // var randomBytes=require('randomBytes')\n  // console.log(\"random\")\n  // console.log(crypto.randomBytes(32))\n  var wordArray = CryptoJS.lib.WordArray.random(16);\n  var code_verifier = Base64.stringify(wordArray); //   function sha256(buffer) {\n  //     return crypto.createHash(\"sha256\").update(buffer).digest();\n  //   }\n  //   var code_challenger = base64URLEncode(sha256(code_verifier));\n\n  var code_challenger = Base64.stringify(sha256(code_verifier));\n  console.log(\"code_verifier\");\n  console.log(code_verifier);\n  console.log(\"code_challenger\");\n  console.log(code_challenger);\n  return (\n    /*#__PURE__*/\n    //   <a href={`https://dev-12u2388w.us.auth0.com/authorize?\n    //   response_type=code&\n    //   code_challenge=${code_challenger}&\n    //   code_challenge_method=S256&\n    //   client_id=UeOlj5xtXsESZ2PGctxyOPoz22ybghi3&\n    //   redirect_uri=http://localhost:3000/&\n    //   scope=openid%20profile&\n    //   state=xyzABC123`}>\n    //   Sign In\n    // </a>)\n    _jsxDEV(\"a\", {\n      href: `https://dev-12u2388w.us.auth0.com/authorize?response_type=code&\n  code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&\n  code_challenge_method=S256&\n  client_id=UeOlj5xtXsESZ2PGctxyOPoz22ybghi3&\n  redirect_uri=http://localhost:3000&\n  scope=openid%20profile&\n  state=xyzABC123`,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = VerifierChallenger;\nexport default VerifierChallenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifierChallenger\");","map":{"version":3,"sources":["/Users/hyauto/Desktop/hotstarclone/hotstar clone/src/VerifierChallenger.js"],"names":["sha256","Base64","CryptoJS","VerifierChallenger","wordArray","lib","WordArray","random","code_verifier","stringify","code_challenger","console","log"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIC,SAAS,GAAGF,QAAQ,CAACG,GAAT,CAAaC,SAAb,CAAuBC,MAAvB,CAA8B,EAA9B,CAAhB;AACA,MAAIC,aAAa,GAAGP,MAAM,CAACQ,SAAP,CAAiBL,SAAjB,CAApB,CAb+B,CAe/B;AACA;AACA;AACA;;AACA,MAAIM,eAAe,GAAGT,MAAM,CAACQ,SAAP,CAAiBT,MAAM,CAACQ,aAAD,CAAvB,CAAtB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAG,MAAA,IAAI,EAAG;AACd;AACA;AACA;AACA;AACA;AACA,kBANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAqBD,CA7CD;;KAAMP,kB;AA8CN,eAAeA,kBAAf","sourcesContent":["// import hmacSHA512 from \"crypto-js/hmac-sha512\";\nimport sha256 from \"crypto-js/sha256\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport CryptoJS from \"crypto-js\";\n\n// Dependency: Node.js crypto module\n// https://nodejs.org/api/crypto.html#crypto_crypto\nconst VerifierChallenger = () => {\n  //   function base64URLEncode(str) {\n  //     return str\n  //       .toString(\"base64\")\n  //       .replace(/\\+/g, \"-\")\n  //       .replace(/\\//g, \"_\")\n  //       .replace(/=/g, \"\");\n  //   }\n  //   var code_verifier = base64URLEncode(crypto.randomBytes(32));\n  // var randomBytes=require('randomBytes')\n  // console.log(\"random\")\n  // console.log(crypto.randomBytes(32))\n  var wordArray = CryptoJS.lib.WordArray.random(16);\n  var code_verifier = Base64.stringify(wordArray);\n\n  //   function sha256(buffer) {\n  //     return crypto.createHash(\"sha256\").update(buffer).digest();\n  //   }\n  //   var code_challenger = base64URLEncode(sha256(code_verifier));\n  var code_challenger = Base64.stringify(sha256(code_verifier));\n  console.log(\"code_verifier\");\n  console.log(code_verifier);\n  console.log(\"code_challenger\");\n  console.log(code_challenger);\n  return (\n    //   <a href={`https://dev-12u2388w.us.auth0.com/authorize?\n    //   response_type=code&\n    //   code_challenge=${code_challenger}&\n    //   code_challenge_method=S256&\n    //   client_id=UeOlj5xtXsESZ2PGctxyOPoz22ybghi3&\n    //   redirect_uri=http://localhost:3000/&\n    //   scope=openid%20profile&\n    //   state=xyzABC123`}>\n    //   Sign In\n    // </a>)\n    <a href={`https://dev-12u2388w.us.auth0.com/authorize?response_type=code&\n  code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&\n  code_challenge_method=S256&\n  client_id=UeOlj5xtXsESZ2PGctxyOPoz22ybghi3&\n  redirect_uri=http://localhost:3000&\n  scope=openid%20profile&\n  state=xyzABC123`}>\n  Sign In\n</a>\n  );\n};\nexport default VerifierChallenger;\n"]},"metadata":{},"sourceType":"module"}